name: Deploy

on:
  workflow_call:
    secrets:
      DB_HOST:
        required: true
      DB_NAME:
        required: true
      DB_PASSWORD:
        required: true
      DB_PORT:
        required: true
      DB_USER:
        required: true
      JWT_SECRET:
        required: true
      NODE_ENV:
        required: true

jobs:
  docker-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Deploy
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
        run: |
          docker compose down -v || exit
          docker compose up --build -d || exit

      - name: Check Running Containers
        run: docker ps -a

      - name: wait for MySQL - improve this
        run: sleep 60

      - name: Debug network issues
        run: |
          ping -c 4 mysql || true
          nslookup mysql || true
          cat /etc/hosts
          docker ps
          docker logs book-db


      - name: Run integration tests inside container
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
        run: |
          echo "Running integration tests inside container..."
          docker exec book-api npm run test:integration


      - name: Run AWS deploy
        run: |
          echo "TODO" 
